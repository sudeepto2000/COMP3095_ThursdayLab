#updates with every new container-all the containers

#docker-compose -p comp3095-microservices-ecommerce -f docker-compose-single.yml up -d --build
# start containers in detached mode
#docker-compose -p comp3095-microservices-ecommerce -f docker-compose-single.yml up -d --build
#version: '3.9'

#to add order-service, have to create integration tests by yourelf

services:
  #run text file that instantiates images
  postgres-room:
    image: postgres
    ports:
      - "5433:5432"
    container_name: postgres-room
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres-room-services
    volumes:
      - ./data/room:/var/lib/postgresql/data
      - ./init/room/init.sql:/docker-entrypoint-initdb.d/init.sql
    #docker-compose -p postgres-inventory-single -f docker-compose-multiple.yml up -d
    #no network bc local
  postgres-user:
    image: postgres
    ports:
      - "5434:5432"
    container_name: postgres-user
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres-user-services
    volumes:
      - ./data/user:/var/lib/postgresql/data
      - ./init/user/init.sql:/docker-entrypoint-initdb.d/init.sql

  postgres-approval:
    image: postgres
    ports:
      - "5435:5432"
    container_name: postgres-approval
    environment:
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=postgres-approval-services
    volumes:
      - ./data/approval:/var/lib/postgresql/data
      - ./init/approval/init.sql:/docker-entrypoint-initdb.d/init.sql
  #GUI
  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8888:80"
    container_name: pgadmin-inter-service
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.ca
      - PGADMIN_DEFAULT_PASSWORD=password

volumes:
  postgres:
    driver: local # use local driver to persist data on the host
networks:
  spring:
    driver: bridge # bridge allows isolated communication between containers
